<UserControl x:Class="MyStock.Pages.Settings.PersonalizationPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:MyStock.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:langAsset="clr-namespace:MyStock.Application.Assets.Lang;assembly=MyStock.Application"
             xmlns:local="clr-namespace:MyStock.Pages.Settings"
             xmlns:localControls="clr-namespace:MyStock.Controls"
             xmlns:materialDesign="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
             xmlns:materialDesignColors="clr-namespace:MaterialDesignColors;assembly=MaterialDesignColors"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewmodels="clr-namespace:MyStock.ViewModels"
             d:DataContext="{d:DesignInstance Type=viewmodels:PersonalizationPageViewModel}"
             d:DesignHeight="450"
             d:DesignWidth="800"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.RadioButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
            <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
            <converters:MultiValueEqualityConverter x:Key="MultiValueEqualityConverter" />

            <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth0" />
            </Style>

            <Style x:Key="HexLabelTextBlock"
                   BasedOn="{StaticResource MaterialDesignBody2TextBlock}"
                   TargetType="TextBlock">
                <Setter Property="Margin" Value="8" />
            </Style>

            <Style TargetType="Border">
                <Setter Property="BorderBrush" Value="LightGray" />
                <Setter Property="BorderThickness" Value="1" />
            </Style>

            <DataTemplate x:Key="SwatchColorTemplate" DataType="{x:Type Color}">
                <Button Width="40"
                        Height="40"
                        Background="{Binding Converter={StaticResource ColorToBrushConverter}}"
                        Command="{Binding DataContext.ChangeHueCommand, RelativeSource={RelativeSource AncestorType=local:PersonalizationPage}}"
                        CommandParameter="{Binding}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="localControls:ButtonAssist.UniformCornerRadius" Value="0" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Margin" Value="1,1,0,0" />
                            <Setter Property="materialDesign:RippleAssist.IsDisabled" Value="True" />
                            <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth0" />
                            <Setter Property="Tag" Value="0" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="(localControls:ButtonAssist.UniformCornerRadius)"
                                                                 To="8"
                                                                 Duration="0:0:0.18" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>

                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="(localControls:ButtonAssist.UniformCornerRadius)"
                                                                 From="8"
                                                                 Duration="0:0:0.18" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>

                                <DataTrigger Value="True">
                                    <DataTrigger.Binding>
                                        <MultiBinding Converter="{StaticResource MultiValueEqualityConverter}">
                                            <Binding Mode="OneWay"
                                                     Path="DataContext.SelectedColor"
                                                     RelativeSource="{RelativeSource AncestorType=local:PersonalizationPage}" />
                                            <Binding Mode="OneWay" />
                                        </MultiBinding>
                                    </DataTrigger.Binding>

                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="(localControls:ButtonAssist.UniformCornerRadius)"
                                                                 To="20"
                                                                 Duration="0:0:0.18" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>

                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="(localControls:ButtonAssist.UniformCornerRadius)"
                                                                 From="20"
                                                                 Duration="0:0:0.18" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" MinWidth="350" />
            <ColumnDefinition Width="300" />
        </Grid.ColumnDefinitions>

        <StackPanel Grid.ColumnSpan="2"
                    Margin="8"
                    Orientation="Horizontal">
            <StackPanel Orientation="Horizontal">
                <TextBlock VerticalAlignment="Center" Text="{x:Static langAsset:Translations.Light}" />
                <ToggleButton Margin="8,0" IsChecked="{Binding IsDarkTheme}" />
                <TextBlock VerticalAlignment="Center" Text="{x:Static langAsset:Translations.Dark}" />
            </StackPanel>

        </StackPanel>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <UniformGrid Margin="0,0,0,0" Columns="2">
                <RadioButton x:Name="MdPaletteButton"
                             Margin="4"
                             Checked="MdPaletteButton_Checked"
                             Content="{x:Static langAsset:Translations.Palette}"
                             Style="{StaticResource MaterialDesignTabRadioButton}" />

                <RadioButton x:Name="CustomPaletteButton"
                             Margin="4"
                             Checked="CustomPaletteButton_Checked"
                             Content="{x:Static langAsset:Translations.Custom}"
                             Style="{StaticResource MaterialDesignTabRadioButton}" />
            </UniformGrid>
            <Grid Grid.Row="1">
                <Grid Visibility="{Binding IsChecked, ElementName=CustomPaletteButton, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <materialDesign:ColorPicker x:Name="ColorPicker" Color="{Binding SelectedColor, Delay=25}" />
                </Grid>

                <Grid Visibility="{Binding IsChecked, ElementName=MdPaletteButton, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="Width" Value="40" />
                                <Setter Property="Margin" Value="1,1,0,0" />
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </StackPanel.Resources>

                        <TextBlock Text="50" />
                        <TextBlock Text="100" />
                        <TextBlock Text="200" />
                        <TextBlock Text="300" />
                        <TextBlock Text="400" />
                        <TextBlock Text="500" />
                        <TextBlock Text="600" />
                        <TextBlock Text="700" />
                        <TextBlock Text="800" />
                        <TextBlock Text="900" />
                        <TextBlock Text="A100" />
                        <TextBlock Text="A200" />
                        <TextBlock Text="A400" />
                        <TextBlock Text="A700" />
                    </StackPanel>

                    <ItemsControl Grid.Row="1"
                                  ItemsSource="{Binding Swatches}"
                                  ScrollViewer.VerticalScrollBarVisibility="Auto">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type materialDesignColors:ISwatch}">
                                <StackPanel Orientation="Horizontal">
                                    <ItemsControl ItemTemplate="{StaticResource SwatchColorTemplate}" ItemsSource="{Binding Hues}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>
            </Grid>
        </Grid>

        <StackPanel Grid.Row="1"
                    Grid.Column="2"
                    Margin="20,40,0,0"
                    materialDesign:ShadowAssist.ShadowDepth="Depth3">
            <StackPanel.Resources>
                <Style x:Key="PaletteButton"
                       BasedOn="{StaticResource MaterialDesignRaisedButton}"
                       TargetType="Button">
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth0" />
                    <Setter Property="materialDesign:ShadowAssist.ShadowEdges" Value="All" />
                    <Setter Property="materialDesign:RippleAssist.Feedback" Value="LightGray" />
                    <Setter Property="materialDesign:RippleAssist.RippleOnTop" Value="True" />
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
                    <Setter Property="Padding" Value="16" />
                </Style>
            </StackPanel.Resources>


            <Border Height="300"
                    BorderBrush="LightGray"
                    BorderThickness="0,0,1,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2*" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Border Background="{DynamicResource PrimaryHueMidBrush}">
                        <Grid>
                            <TextBlock DataContext="{DynamicResource PrimaryHueMidBrush}"
                                       Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                                       Style="{StaticResource HexLabelTextBlock}"
                                       Text="{Binding Converter={StaticResource BrushToHexConverter}}" />
                        </Grid>
                    </Border>

                    <UniformGrid Grid.Row="2" Rows="1">
                        <Border Background="{DynamicResource PrimaryHueLightBrush}">
                            <TextBlock DataContext="{DynamicResource PrimaryHueLightBrush}"
                                       Foreground="{DynamicResource PrimaryHueLightForegroundBrush}"
                                       Style="{StaticResource HexLabelTextBlock}"
                                       Text="{Binding Converter={StaticResource BrushToHexConverter}}" />
                        </Border>
                        <Border Background="{DynamicResource PrimaryHueDarkBrush}">
                            <TextBlock DataContext="{DynamicResource PrimaryHueDarkBrush}"
                                       Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                                       Style="{StaticResource HexLabelTextBlock}"
                                       Text="{Binding Converter={StaticResource BrushToHexConverter}}" />
                        </Border>
                    </UniformGrid>
                </Grid>
            </Border>
        </StackPanel>
    </Grid>
</UserControl>
